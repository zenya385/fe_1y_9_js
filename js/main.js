import users from './users.js';
import cars from './cars.js';

//* ============================== –ü—Ä–æ—Ü–µ–¥—É—Ä–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è ===============================

//3 –ü—Ä–æ—Ü–µ–¥—É—Ä–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è - –Ω–∞–±—ñ—Ä –Ω–µ –ø–æ–≤'—è–∑–∞–Ω–∏—Ö —è–≤–Ω–æ —Ñ—É–Ω–∫—Ü—ñ–π —ñ –∑–º—ñ–Ω–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —ñ –æ–±—Ä–æ–±–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó. –¶–µ–π –ø—ñ–¥—Ö—ñ–¥ - –ø—Ä–æ—Å—Ç–∏–π —ñ –ø—Ä—è–º–æ–ª—ñ–Ω—ñ–π–Ω–∏–π, —ñ –º–æ–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –¥–ª—è –∑–∞–¥–∞—á, –≤ —è–∫–∏—Ö –Ω–µ–º–∞—î —Ç—ñ—Å–Ω–æ –ø–æ–≤'—è–∑–∞–Ω–∏—Ö —Å—É—Ç–Ω–æ—Å—Ç–µ–π (–¥–∞–Ω–∏—Ö —ñ —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è —ó—Ö –æ–±—Ä–æ–±–∫–∏).

// const baseSalary = 30000;
// const overtime = 10;
// const rate = 20;

// const getWage = (sal, time, rate) => {
//   return sal + time * rate;
// };

// console.log('getWage>>', getWage(baseSalary, overtime, rate));

//* ============================== –û–±'—î–∫—Ç–Ω–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–û–û–ü) ===============================
//3 –û–±'—î–∫—Ç–Ω–æ-–æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è (–û–û–ü) - –º–µ—Ç–æ–¥–æ–ª–æ–≥—ñ—è, —è–∫–∞ –æ–ø–∏—Å—É—î –ø—Ä–æ–≥—Ä–∞–º—É —è–∫ —Å—É–∫—É–ø–Ω—ñ—Å—Ç—å –æ–±'—î–∫—Ç—ñ–≤, –∫–æ–∂–µ–Ω –∑ —è–∫–∏—Ö –º—ñ—Å—Ç–∏—Ç—å –¥–∞–Ω—ñ (–≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ) —ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –Ω–∏–º–∏.
const emploee = {
  // baseSalary: 30000,
  // overtime: 10,
  // rate: 20,
  // getWage() {
  //   const { baseSalary, overtime, rate } = this;
  //   return baseSalary + overtime * rate;
  //   // return this.baseSalary + this.overtime * this.rate;
  // },
};

// console.log('getWage>>', emploee.getWage());
// console.log('emploee>>', emploee);

// const animal = {
//   legs: 4,
// };
// const dog = Object.create(animal);
// dog.name = '–ú–∞–Ω–≥–æ';

// console.log(dog); // {name: '–ú–∞–Ω–≥–æ'}
// // console.log(dog.name); // '–ú–∞–Ω–≥–æ'
// // console.log(dog.legs); // 4

// for (const key in dog) {
//   const element = key;
//   console.log('element:>>', element);
// }

//4 =================== –ü—Ä–æ—Ç–æ—Ç–∏–ø –æ–±'—î–∫—Ç–∞ ======================================

/*
 * –ü—Ä–æ—Ç–æ—Ç–∏–ø –æ–±'—î–∫—Ç–∞
 *
 * - https://miro.com/app/board/o9J_ku0WE0g=/
 * - Object.create()
 * - [[–ü—Ä–æ—Ç–æ—Ç–∏–ø]] —ñ __proto__
 * - Object.getPrototypeOf()
 * - –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —ñ Object.prototype.hasOwnProperty()
 * - –¶–µ–ø–æ—á–∫–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤
 */

const objC = {
  z: 5,
};

// const objA = {
//x: 1,
// };

// const objB = {
//   y: 2,
// };

const objB = Object.create(objC);
objB.y = 2;

// console.log('objC:>>', objC);
// console.log('objB:>>', objB.z);

// const objA = Object.create(objB);
// objA.x = 1;

// // console.log('objA', objA.z);

// for (const key in objA) {
//   // if (Object.hasOwnProperty.call(object, key)) {
//   const element = key;
//   console.log('objA:>>', element);
//   // }
// }
// console.log('objA:>>', objA);

// console.log('objA', objA);

// console.log(objA.hasOwnProperty('x'));

// const dummyObj = Object.create({ message: '–ï—Ç–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –æ–±'—î–∫—Ç–∞ –ø—Ä–æ—Ç–æ—Ä—Ç–∏–ø–∞' });
// dummyObj.message = '–¶–µ –≤–ª–∞—Å–Ω–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –æ–±'—î–∫—Ç–∞';
// console.log('dummyObj', dummyObj);

// console.log(dummyObj.message);

// '–ï—Ç–æ –≤–ª–∞—Å–Ω–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –æ–±'—î–∫—Ç–∞'
// '–¶–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –æ–±'—î–∫—Ç–∞-–ø—Ä–æ—Ç–æ—Ç–∏–ø—É'

/*
 * –ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ—à—É–∫—É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –≤ —Ü–µ–ø–æ—á—Ü—ñ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤:
 * 1. –ü–æ—à—É–∫ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è —É –≤–ª–∞—Å–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è—Ö
 * 2. –Ø–∫—â–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –Ω–µ–º–∞—î –≤ –≤–ª–∞—Å–Ω–∏—Ö, –ø–æ—à—É–∫ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ —Ü–µ–ø–æ—á–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤
 * 3. –ü–æ—à—É–∫ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ (—î —Ç–∞–∫–µ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å)
 * 4. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 */

// const objA = Object.create({ z: 5 });
// objA.y = 100;
// console.log('objA', objA);

// console.log(objA.x);

//4 =================== –ö–ª–∞—Å–∏ =============================

/*
 * –ö–ª–∞—Å—Å–∏
 * üê∑ - –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è
 * üê∑ - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
 * üê∑ - –º–µ—Ç–æ–¥–∏
 * üê∑ - —Å—Ç–∞—Ç–∏—á–Ω–∞
 * üê∑ - –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
 * üê∑ - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—É–±–ª—ñ—á–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π —ñ –º–µ—Ç–æ–¥—ñ–≤ –∫–ª–∞—Å—ñ–≤
 * üê∑ - –≥–µ—Ç—Ç–µ—Ä–∏ —Ç–∞ —Å–µ—Ç—Ç–µ—Ä–∏
 */

class Car {
  constructor({ brand, model, price }) {
    // const {brand, model, price} = params;
    this.brand = brand;
    this.model = model;
    this.price = price;
  }
  getBrand() {
    return `–ë—Ä–µ–Ω–¥: ${this.brand}, –ú–æ–¥–µ–ª—å: ${this.model}, –¶—ñ–Ω–∞: ${this.price}`;
  }
}

const car1 = new Car({ brand: 'Audi', model: 'Q3', price: 35000 });
const car2 = new Car({ brand: 'Honda', model: 'CR-V', price: 24045 });
const car3 = new Car({ brand: 'Toyota', model: 'Sequoia', price: 45560 });
const car4 = new Car({ brand: 'Mazda', model: 'CX-9', price: 31520 });

console.log(car1); // {brand: 'Audi', model: 'Q3', price: 35000 }
console.log(car2); // { brand: 'Honda', model: 'CR-V', price: 24045  }
console.log(car3); // {brand: 'Toyota', model: 'Sequoia', price: 45560  }
console.log(car4); // {brand: 'Mazda', model: 'CX-9', price: 31520 }
console.log(car4.getBrand()); // –ë—Ä–µ–Ω–¥: Mazda –ú–æ–¥–µ–ª—å: CX-9 –¶—ñ–Ω–∞: 31520

// class Car {
//   static description = '–ö–ª–∞—Å –æ–ø–∏—Å—É—é—á–∏–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—å';

//   static logInfo(carObj) {
//     console.log('Car.logInfo -> carObj', carObj);
//   }

//   constructor({ brand, model, price } = {}) {
//     this.brand = brand;
//     this._model = model;
//     this._price = price;
//   }

//   get price() {
//     return this._price;
//   }

//   set price(newPrice) {
//     this._price = newPrice;
//   }

//   get model() {
//     return this._model;
//   }

//   set model(newModel) {
//     this._model = newModel;
//   }
// }

// const carInstance = new Car({
//      –º–∞—Ä–∫–∞: "–ê—É–¥—ñ",
//      –º–æ–¥–µ–ª—å: 'Q3',
//      —Ü—ñ–Ω–∞: 35000,
// });

// console.log(carInstance.model);
// carInstance.model = 'Q4';
// console.log(carInstance.model);

// console.log(carInstance.price);
// carInstance.price = 50000;
// console.log(carInstance.price);

// console.log(carInstance);

//4 =================== –§—É–Ω–∫—Ü—ñ—ó-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏ =============================

/*
 * –û—Å–Ω–æ–≤–∏ –û–û–ü: –∫–ª–∞—Å, –µ–∫–∑–µ–º–ø–ª—è—Ä (–æ–±'—î–∫—Ç), —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

/*
 * –§—É–Ω–∫—Ü—ñ—ó-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏
 * - –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ
 * - –û–ø–µ—Ä–∞—Ç–æ—Ä –Ω–æ–≤–∏–π
 * - –°–≤–æ–π—Å—Ç–≤–æ Function.prototype
 */

// const Car = function ({ –º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ü—ñ–Ω–∞ } = {}) {
//    // const { –º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å, —Ü—ñ–Ω–∞ } = config;
//    // 2. –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞,
//    // —Ç–æ —î –≤ —Ü—å–æ–º—É –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ
//    this.brand = –±—Ä–µ–Ω–¥;
//    this.model = –º–æ–¥–µ–ª—å;
//    this.price = —Ü—ñ–Ω–∞;

//    // 3. –£ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ this.__proto__ –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç Car.prototype
//    // —Ç–æ–±—Ç–æ Car.prototype —Ü–µ –ü–†–û–¢–û–¢–ò–ü –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –æ–±'—î–∫—Ç–∞ (–µ–∫–∑–µ–º–ø–ª—è—Ä–∞)

//    // 4. –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç –≤–∏–∫–ª–∏–∫—É –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –≤ –º—ñ—Å—Ü–µ –Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è
// };

// Car.prototype.sayHi = —Ñ—É–Ω–∫—Ü—ñ—è () {
//    console.log('Car.prototype.sayHi -> —Ü–µ', —Ü–µ);
//    console.log('–ü—Ä–∏–≤—ñ—Ç :) ');
// };

// Car.prototype.changePrice = —Ñ—É–Ω–∫—Ü—ñ—è (–Ω–æ–≤–∞–¶—ñ–Ω–∞) {
//    this.price = newPrice;
// };

// console.log(Car.prototype);

// 1. –Ø–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ new, —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –ø—É—Å—Ç–∏–π –æ–±'—î–∫—Ç
// const myCar = new Car({
// –º–∞—Ä–∫–∞: 'Audi',
// –º–æ–¥–µ–ª—å: 'Q3',
// —Ü—ñ–Ω–∞: 35000,
// });
// console.log(myCar);

// myCar.sayHi();
// myCar.changePrice(10000);

// const myCar2 = new Car({ brand: 'BMW', model: 'X6', price: 50000 });
// console.log(myCar2);

// myCar2.sayHi();

// const myCar3 = new Car({ brand: 'Audi', model: 'A6', price: 65000 });
// console.log(myCar3);

// myCar3.sayHi();

//2 ================================ ===========================================

// const User = function ({ email, password } = {}) {
//   this.email = email;
//   this.password = password;
// };

// console.log(User.prototype);

// User.prototype.changeEmail = function (newMail) {
//   this.email = newMail;
// };

// const mango = new User({ email: 'mango@mail.com', password: 1111111 });

// mango.changeEmail('my-new-mail@mail.com');
// // console.log(mango);

/*
 * –°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —ñ –º–µ—Ç–æ–¥–∏
 * - –°—Ç–∞—Ç–∏—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ç–∞ –º–µ—Ç–æ–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Å–∞–º–æ–º—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ñ
 * - –£ —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö –º–µ—Ç–æ–¥–∞—Ö —Ü–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
 */

// User.message =
//    '–Ø —Å—Ç–∞—Ç–∏—á–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å, –º–µ–Ω–µ –Ω–µ–º–∞—î –≤ –µ–∫–∑–µ–º–ø–ª—è—Ä–∞—Ö –∞–±–æ –≤ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ñ.';

// User.logInfo = function (obj) {
//    console.log('User.logInfo -> obj', obj);
//    console.log('–ü–æ—à—Ç–∞: ', obj.email);
//    console.log('–ü–∞—Ä–æ–ª—å: ', obj.password);
// };

// User.logInfo(mango);

// Object.keys()
// Object.value()

//* 1. –£ –∫–æ–∂–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞ —î –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å __proto__
//* 2. –í —Ü—ñ–π –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –ª–µ–∂–∏—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –π–æ–≥–æ –ü–†–û–¢–û–¢–ò–ü, —Ç–æ —î —ñ–Ω—à–∏–π –æ–±'—î–∫—Ç
//* 3. –ü—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ª—ñ—Ç–µ—Ä–∞ –æ–±'—î–∫—Ç–∞, —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å __proto__ –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –§—É–Ω–∫—Ü—ñ—è.prototype
//* 4. –§—É–Ω–∫—Ü—ñ—è-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ü–µ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è :)
//* 5. –í—Å—é –º–∞–≥—ñ—é —Ä–æ–±–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä new
//* 6. –Ø–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ new, —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –ø—É—Å—Ç–∏–π –æ–±'—î–∫—Ç
//* 7. –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞
//* 8. –£ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ this.__proto__ –∑–∞–ø–∏—Å—É—î—Ç—å—Å—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç –§—É–Ω–∫—Ü–∏—è.prototype
//* 9. –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–±'—î–∫—Ç –≤–∏–∫–ª–∏–∫—É –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –≤ –º—ñ—Å—Ü–µ new –§—É–Ω–∫—Ü—ñ—è()
